name: ci
on: push
jobs:
  check:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v15
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: keep-outputs = true
      - uses: cachix/cachix-action@v10
        with:
          name: kgtkr
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - name: Build devShell
        run: |
          nix build .#devShell.$(nix eval --expr 'builtins.currentSystem' --impure --raw) --out-link result-devShell
          nix print-dev-env > result-devShell.sh
          echo "BASH_ENV=$PWD/result-devShell.sh" >> $GITHUB_ENV
      - name: Cache cargo target
        uses: actions/cache@v3
        with:
          path: |
            ./target
            ~/.cargo
          key: cargo-cache-20230102-1-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-cache-20230102-1-
      - name: crate2nix
        run: |
          crate2nix generate
          git diff --exit-code
      - name: Run format
        run: |
          cargo fmt --all -- --check
      - name: Run clippy
        run: |
          cargo clippy --all
      - name: Run e2e tests
        run: ./run-e2e.sh
      - name: Release build
        run: |
          nix build . --out-link result-release
      - uses: actions/upload-artifact@v3
        with:
          name: tocc-${{ runner.os }}
          path: result-release/bin/tocc
